/**
 * Безопасно получает свойство объекта
 *
 * @export
 * @template T
 * @param {AnyRecord} object
 * @param {string} key
 * @return {T|undefined} (T | undefined)
 */
function getOwnProperty(object, key) {
  var _a;
  return (_a = Object.getOwnPropertyDescriptor(object, key)) === null ||
    _a === void 0
    ? void 0
    : _a.value;
}
/**
 * Safe _.get
 *
 * @export
 * @template {T}
 * @param {AnyRecord} object
 * @param {string} key
 * @return {T|undefined}
 */
function getOwnPropertyDeep(object, key) {
  const parts = key.split(".");
  let value = object;
  for (const path of parts) {
    value = getOwnProperty(value, path);
  }
  return value;
}
export { getOwnProperty, getOwnPropertyDeep };
