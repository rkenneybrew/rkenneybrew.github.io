"use strict";
const crypto = require("crypto");
/**
 *
 *
 * @export
 * @param {Uint8Array} array1
 * @param {Uint8Array} array2
 * @return {boolean} boolean
 */
function timingSafeEqual(array1, array2) {
  return crypto.timingSafeEqual(Buffer.from(array1), Buffer.from(array2));
}
/**
 *
 *
 * @export
 * @param {number} size
 * @return {Uint8Array} Uint8Array
 */
function randomBytes(size) {
  return new Uint8Array(crypto.randomBytes(size));
}
/**
 *
 *
 * @export
 * @param {string} algorithm
 * @param {BinaryAlike} key
 * @param {BinaryAlike} data
 * @return {Uint8Array} Uint8Array
 */
function hmac(algorithm, key, data) {
  return new Uint8Array(
    crypto.createHmac(algorithm, Buffer.from(key)).update(Buffer.from(data)).digest()
  );
}
exports.hmac = hmac;
exports.randomBytes = randomBytes;
exports.timingSafeEqual = timingSafeEqual;
