import { OptionsWrapperWithSetter } from "../../../options-wrapper";
import { HttpClient, HttpClientOptions, HttpRequestOptions, HttpResponse } from "../../http.types";
import { AxiosResponse } from "axios";
/**
 *
 *
 * @export
 * @class AxiosHttpClient
 * @extends {OptionsWrapperWithSetter<HttpClientOptions>}
 * @implements {HttpClient}
 */
export declare class AxiosHttpClient extends OptionsWrapperWithSetter<HttpClientOptions> implements HttpClient {
    /**
     *
     *
     * @protected
     * @memberof AxiosHttpClient
     */
    protected readonly _axios: import("axios").AxiosInstance;
    /**
     *
     *
     * @param {HttpRequestOptions} options
     * @return {Promise<HttpResponse>}
     * @memberof AxiosHttpClient
     */
    request(options: HttpRequestOptions): Promise<HttpResponse>;
    /**
     *
     *
     * @protected
     * @param {AxiosResponse} axiosResponse
     * @param {HttpRequestOptions} request
     * @return {HttpResponse} HttpResponse
     * @memberof AxiosHttpClient
     */
    protected _mapResponse(axiosResponse: AxiosResponse, request: HttpRequestOptions): HttpResponse;
}
