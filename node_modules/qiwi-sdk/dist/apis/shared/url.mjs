import { formatQuerystring } from "./querystring.mjs";
/**
 *
 *
 * @export
 * @param {string[]} parts
 * @param {...unknown[]} insertions
 * @return {URLResult}
 */
function url(parts, ...insertions) {
  const safeInsertions = insertions.map((value) =>
    encodeURIComponent(String(value))
  );
  let url = "";
  for (const part of parts) {
    url += part;
    const insertion = safeInsertions.shift();
    if (typeof insertion === "string") url += insertion;
  }
  /**
   *
   *
   * @param {AnyRecord} [queryParameters={}]
   * @return {string}  {string}
   */
  function createUrl(queryParameters = {}) {
    const querystring = formatQuerystring(queryParameters);
    if (querystring.length > 0) url += `?${querystring}`;
    return url;
  }
  createUrl.toString = () => createUrl();
  return createUrl;
}
export { url };
