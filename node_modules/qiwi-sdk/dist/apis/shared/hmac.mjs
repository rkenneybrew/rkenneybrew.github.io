import { utf8ToUint8Array, hexToUint8Array } from "./platform/decode/decode.mjs";
import { hmac, timingSafeEqual } from "./platform/crypto/node.mjs";
/**
 *
 *
 * @export
 * @param {HmacOptions} options
 * @return {boolean}
 */
function compareHmac({ algorithm = "sha256", data, digest, key }) {
  if (typeof key === "string") key = utf8ToUint8Array(key);
  if (typeof data === "string") data = utf8ToUint8Array(data);
  if (typeof digest === "string") digest = hexToUint8Array(digest);
  const hash = hmac(algorithm, key, data);
  return timingSafeEqual(hash, digest);
}
const QIWI_JOINER = "|";
/**
 *
 *
 * @export
 * @param {string} key
 * @param {string} digest
 * @param {string[]} data
 * @return {boolean} boolean
 */
function compareQiwiHmac(key, digest, data) {
  return compareHmac({ key, digest, data: data.join(QIWI_JOINER) });
}
export { compareHmac, compareQiwiHmac };
