"use strict";
const url = require("../shared/url.js"),
  http = require("../shared/http.js"),
  querystring = require("../shared/querystring.js"),
  api = require("./api.js");
/**
 * # Доступ к API QIWI Кошелька
 * [Документация QIWI](https://developer.qiwi.com/ru/qiwi-wallet-personal-advanced/)
 *
 * @export
 * @class WalletOauthApi
 * @extends {WalletApi}
 */
class WalletOauthApi extends api.WalletApi {
  constructor() {
    super(...arguments);
    this._http = new http.SimpleJsonHttp();
  }
  /**
   *
   *
   * @protected
   * @return {SimpleJsonHttp}
   * @memberof WalletOauthApi
   */
  _getHttp() {
    this._http.client.options = {
      ...this._options.http.client.options,
      baseURL: url.url`https://qiwi.com/oauth/`(),
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
        Accept: "application/json"
      },
      stringifyBody: querystring.formatQuerystring,
      okStatusCodes: [200]
    };
    return this._http;
  }
  /**
   * ## Выпуск OAuth-токена
   *
   * Создаёт токен с увеличенным сроком действия (10 лет)
   *
   * [Документация](https://developer.qiwi.com/ru/qiwi-wallet-personal-advanced/?http#intro)
   *
   * @return {Promise<TokenResponse<Wallet>>} Promise<PrettyTokenResponse<Wallet>>
   * @memberof WalletOauthApi
   */
  async createToken() {
    const http = this._getHttp();
    const codeResponse = await http.post(url.url`authorize`(), {
      response_type: "code",
      token: this._options.token,
      client_id: WalletOauthApi.CLIENT_ID,
      client_software: WalletOauthApi.CLIENT_SOFTWARE
    });
    const tokenResponse = await http.post(url.url`token`(), {
      grant_type: "authorization_code",
      client_id: WalletOauthApi.CLIENT_ID,
      client_secret: WalletOauthApi.CLIENT_SECRET,
      code: codeResponse.code
    });
    return {
      token: tokenResponse.access_token,
      expiry: Number.parseInt(tokenResponse.expires_in, 10)
    };
  }
}
WalletOauthApi.CLIENT_ID = "api_wallet_private";
WalletOauthApi.CLIENT_SECRET = "hTFPyt";
WalletOauthApi.CLIENT_SOFTWARE = "api";
exports.WalletOauthApi = WalletOauthApi;
