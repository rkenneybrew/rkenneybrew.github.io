"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Merger = void 0;
class Merger {
    constructor(force) {
        this.force = force;
    }
    mergeWorkflow(current, update) {
        if (this.force)
            current.commentLines = update.commentLines;
        if (this.force)
            current.name = update.name;
        if (this.force)
            current.triggers = update.triggers;
    }
    mergeJobs(current, update) {
        update.jobNames.forEach(jobName => {
            const updateJob = update.getJob(jobName);
            if (!current.jobNames.includes(jobName)) {
                current.setJob(updateJob.clone());
                return;
            }
            const currentJob = current.getJob(jobName);
            if (this.force)
                currentJob.env = updateJob.env;
            if (this.force)
                currentJob.runsOn = updateJob.runsOn;
            if (this.force)
                currentJob.runsIf = updateJob.runsIf;
            if (this.force)
                currentJob.strategy = updateJob.strategy;
            const updateSteps = updateJob.steps.map(step => step.makeManaged());
            currentJob.steps = currentJob.mergeSteps(updateSteps);
        });
        if (this.force)
            current.jobNames
                .filter(jobName => !update.jobNames.includes(jobName))
                .map(jobName => {
                current.deleteJob(jobName);
            });
    }
    merge(current, update) {
        const result = current.clone();
        this.mergeWorkflow(result, update);
        this.mergeJobs(result, update);
        return result;
    }
}
exports.Merger = Merger;
