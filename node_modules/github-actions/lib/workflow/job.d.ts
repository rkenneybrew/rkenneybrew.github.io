import { IStepData, Step } from "./step";
interface IEnv {
    [index: string]: string;
}
interface IStrategy {
    [index: string]: unknown;
}
export interface IJobData {
    steps: Array<IStepData>;
    "runs-on": string;
    if?: string;
    env?: IEnv;
    strategy?: IStrategy;
    [index: string]: unknown;
}
export declare class Job {
    name: string;
    data: IJobData;
    constructor(name: string, data: IJobData);
    get title(): string;
    get runsOn(): string;
    set runsOn(value: string);
    get strategy(): IStrategy | undefined;
    set strategy(value: IStrategy | undefined);
    get runsIf(): string | undefined;
    set runsIf(value: string | undefined);
    get env(): IEnv | undefined;
    set env(value: IEnv | undefined);
    get steps(): Array<Step>;
    set steps(value: Array<Step>);
    mergeSteps(newSteps: Array<Step>): Array<Step>;
    clone(): Job;
}
export {};
