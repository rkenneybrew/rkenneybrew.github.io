"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.yamlDump = exports.getTempDir = exports.getVersionString = exports.getCommandArgs = exports.getCommandName = exports.decapitalize = void 0;
const fs_1 = __importDefault(require("fs"));
const js_yaml_1 = __importDefault(require("js-yaml"));
const os_1 = __importDefault(require("os"));
const path_1 = __importDefault(require("path"));
const constants_1 = require("./constants");
function decapitalize(s) {
    if (!s)
        return s;
    return `${s[0].toLowerCase()}${s.substr(1)}`;
}
exports.decapitalize = decapitalize;
function getCommandName() {
    return (process.argv[1] && process.argv[1].split("/").pop()) || "ghactions";
}
exports.getCommandName = getCommandName;
function getCommandArgs() {
    return process.argv.slice(2).join(" ");
}
exports.getCommandArgs = getCommandArgs;
function getVersionString() {
    const rootPath = path_1.default.dirname(path_1.default.dirname(__filename));
    const packageJSONPath = path_1.default.join(rootPath, "package.json");
    if (!fs_1.default.existsSync(packageJSONPath))
        return "unknown";
    const packageJSON = JSON.parse(fs_1.default.readFileSync(packageJSONPath, { encoding: constants_1.UTF8 }));
    return `${packageJSON.name} ${packageJSON.version}`;
}
exports.getVersionString = getVersionString;
function getTempDir() {
    return fs_1.default.mkdtempSync(path_1.default.join(os_1.default.tmpdir(), "ghactions-"));
}
exports.getTempDir = getTempDir;
function yamlDump(data) {
    return js_yaml_1.default.dump(data, {
        lineWidth: 999,
        quotingType: '"'
    });
}
exports.yamlDump = yamlDump;
