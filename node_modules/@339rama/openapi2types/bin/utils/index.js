'use strict';
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, '__esModule', { value: true });
exports.capitalize = exports.processArguments = void 0;
var yargs_1 = __importDefault(require('yargs/yargs'));
var helpers_1 = require('yargs/helpers');
var chalk_1 = __importDefault(require('chalk'));
var processArguments = function () {
  var usage = '\nUsage: openapi2types -i <schema_path> -o <output_path>';
  var argv = (0, yargs_1.default)((0, helpers_1.hideBin)(process.argv))
    .usage(usage)
    .option('i', {
      alias: 'input',
      describe: 'JSON schema path',
      type: 'string',
      demandOption: true,
    })
    .option('o', { alias: 'output', describe: 'Output path', type: 'string', demandOption: true })
    .check(function (argv) {
      if (argv.i.endsWith('.json')) {
        return true;
      }
      throw new Error(
        chalk_1.default.red('Argument check failed: input file is not a .json format'),
      );
    })
    .help(true).argv;
  return argv;
};
exports.processArguments = processArguments;
var capitalize = function (value) {
  return value.charAt(0).toUpperCase() + value.slice(1);
};
exports.capitalize = capitalize;
