#!/usr/bin/env node
'use strict';
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, '__esModule', { value: true });
var path_1 = __importDefault(require('path'));
var fs_1 = require('fs');
var chalk_1 = __importDefault(require('chalk'));
var core_1 = require('./core');
var utils_1 = require('./utils');
var parsedArguments = (0, utils_1.processArguments)();
var schemaPath = path_1.default.resolve(process.cwd(), parsedArguments.i);
var typesPath = path_1.default.resolve(process.cwd(), parsedArguments.o);
var main = function (input, output) {
  var schema = JSON.parse((0, fs_1.readFileSync)(input).toString());
  if (!schema) {
    return console.log(
      chalk_1.default.yellowBright('Schema file '.concat(schemaPath, ' is empty')),
    );
  }
  var writeStream = (0, fs_1.createWriteStream)(output);
  var version = schema.swagger;
  console.log(chalk_1.default.bgBlueBright('Starting parse '.concat(input)));
  if (version.startsWith('2')) {
    (0, core_1.parseV2types)(schema, writeStream);
  } else if (version.startsWith('3')) {
    (0, core_1.parseV3types)(schema, writeStream);
  }
  writeStream.close();
  console.log(
    chalk_1.default.bgGreenBright('Types file was successfully generated '.concat(output)),
  );
};
main(schemaPath, typesPath);
